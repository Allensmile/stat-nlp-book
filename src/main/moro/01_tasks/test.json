{
  "name" : "Test Notebook",
  "cells" : [ {
    "id" : 0,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "### Markdown\nshould be the default because\n  \n  1. yah\n     * Huh\n     * What?\n  2. no\n\n * Lala\n * \n\n  \n\n## Blah\nYo\n\n",
      "extraFields" : { },
      "outputFormat" : null
    }
  }, {
    "id" : 1,
    "compiler" : "scala",
    "input" : {
      "sessionId" : null,
      "code" : "import ml.wolfe.nlp.syntax._\nval doc = Document.fromString(\"Hello World, how are you?\")\nval pipeline = Tokenizer.default andThen Segmenter.default\nval segmented = pipeline(doc)\nval first = segmented.sentences.head\nval withDep = first.copy(syntax = SyntaxAnnotation(ConstituentTree.empty, DependencyTree(first.tokens,Seq(Arc(3,1,Some(\"sbj\"))))))\nval docWithDep = segmented.copy(sentences = IndexedSeq(withDep))\nrenderDependencies(docWithDep)\n",
      "extraFields" : {
        "aggregatedCells" : "[]"
      },
      "outputFormat" : null
    }
  }, {
    "id" : 2,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "\n### Test\nYo\n\n  * Help\n  * Not just anybody\n  * Heeelp\n\n$$\n\\prod_i \\sum_j i + j\n$$\n\nWhy not?\n\n#### Test\nA [link](todo) is here",
      "extraFields" : { },
      "outputFormat" : null
    }
  }, {
    "id" : 3,
    "compiler" : "scala",
    "input" : {
      "sessionId" : null,
      "code" : "val doc = ml.wolfe.nlp.converters.SISTAProcessors.annotate(\"Hello World, how are you?\",posTagger=true,parser=true)\ndoc",
      "extraFields" : {
        "aggregatedCells" : "[\"import ml.wolfe.nlp.syntax._\\nval doc = Document.fromString(\\\"Hello World, how are you?\\\")\\nval pipeline = Tokenizer.default andThen Segmenter.default\\nval segmented = pipeline(doc)\\nval first = segmented.sentences.head\\nval withDep = first.copy(syntax = SyntaxAnnotation(ConstituentTree.empty, DependencyTree(first.tokens,Seq(Arc(3,1,Some(\\\"sbj\\\"))))))\\nval docWithDep = segmented.copy(sentences = IndexedSeq(withDep))\\nrenderDependencies(docWithDep)\\n\"]"
      },
      "outputFormat" : null
    }
  }, {
    "id" : 4,
    "compiler" : "markdown",
    "input" : {
      "sessionId" : null,
      "code" : "Some more of \\\\(\\sum i\\\\) ",
      "extraFields" : { },
      "outputFormat" : null
    }
  } ],
  "config" : { }
}
